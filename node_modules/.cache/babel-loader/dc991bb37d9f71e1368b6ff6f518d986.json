{"ast":null,"code":"var _jsxFileName = \"/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction recette(n, i1, i2) {\n  this.nom = n;\n  this.ingredients = i1;\n  this.instructions = i2;\n}\n\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    };\n    this.getRecipe = this.getRecipe.bind(this);\n    this.delete = this.delete.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  getRecipe(e) {\n    let selectedRecipe = recettesList.filter(toFind => toFind.nom === e.target.id)[0];\n    this.setState({\n      nom: selectedRecipe.nom,\n      ingredients: selectedRecipe.ingredients,\n      instructions: selectedRecipe.instructions\n    });\n    document.getElementById(\"recette-detail\").style.display = \"block\";\n  }\n\n  close() {\n    document.getElementById(\"recette-detail\").style.display = \"none\";\n  }\n\n  delete() {\n    let selectedRecipe = recettesList.filter(toFind => toFind.nom === this.state.nom);\n    console.log(selectedRecipe);\n    let indexToDelete = recettesList.indexOf(selectedRecipe);\n    recettesList.splice(indexToDelete, 1);\n    console.log(recettesList);\n    this.setState({\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    });\n    this.close();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Toutes les recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"liste-recettes\",\n        children: recettesList.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: this.getRecipe,\n          id: item.nom,\n          children: item.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recette-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"boutons-recette\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Editer\",\n            children: \"\\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Supprimer\",\n            onClick: this.delete,\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Fermer\",\n            onClick: this.close,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.ingredients).map(key => {\n            if (this.state.ingredients[key]) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: this.state.ingredients[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 24\n              }, this);\n            } else {\n              return null;\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass Ajouter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {\n        0: '',\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: ''\n      },\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e) {\n    e.preventDefault();\n    return this.setState({\n      ingredientsCounter: [...this.state.ingredientsCounter, this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1],\n      ingredients: { ...this.state.ingredients,\n        [this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1]: ''\n      }\n    });\n  }\n\n  handleName(e) {\n    return this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleIngredients(e) {\n    let newIngredients = this.state.ingredients;\n    newIngredients[e.target.name] = e.target.value;\n    return this.setState({\n      ingredients: newIngredients\n    });\n  }\n\n  handleInstructions(e) {\n    return this.setState({\n      instructions: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    if (this.state.name && this.state.ingredients[0] && this.state.instructions) {\n      e.preventDefault();\n      let item = new recette(this.state.name, this.state.ingredients, this.state.instructions);\n      recettesList.push(item);\n      document.getElementById(\"recipe-form\").reset();\n      this.setState({\n        ingredientsCounter: [0, 1, 2, 3, 4, 5],\n        nom: '',\n        ingredients: {\n          0: '',\n          1: '',\n          2: '',\n          3: '',\n          4: '',\n          5: ''\n        },\n        instructions: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ajouter une nouvelle recette :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          defaultValue: this.state.nom,\n          onChange: this.handleName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Ingr\\xE9dients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inputs\",\n            children: Array.from(this.state.ingredientsCounter).map(item => {\n              if (item === 0) {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"ingredient\",\n                  onChange: this.handleIngredients,\n                  name: item,\n                  defaultValue: this.state.ingredients[item],\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 26\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"ingredient\",\n                  onChange: this.handleIngredients,\n                  name: item,\n                  defaultValue: this.state.ingredients[item]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 26\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.newIngredient,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"instructions\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          defaultValue: this.state.instructions,\n          onChange: this.handleInstructions,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 16\n      }, void 0)\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n  add() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Ajouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  recette() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mes recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.recette,\n        children: \"Recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/","map":{"version":3,"sources":["/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js"],"names":["React","recette","n","i1","i2","nom","ingredients","instructions","recettesList","Recettes","Component","constructor","props","state","getRecipe","bind","delete","close","e","selectedRecipe","filter","toFind","target","id","setState","document","getElementById","style","display","console","log","indexToDelete","indexOf","splice","render","map","item","Object","keys","key","Ajouter","ingredientsCounter","newIngredient","handleSubmit","handleName","handleIngredients","handleInstructions","preventDefault","length","name","value","newIngredients","push","reset","Array","from","App","content","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction recette (n, i1, i2) {\n    this.nom = n;\n    this.ingredients = i1;\n    this.instructions = i2;\n}\n\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    };\n    this.getRecipe = this.getRecipe.bind(this);\n    this.delete = this.delete.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  getRecipe(e){\n    let selectedRecipe = recettesList.filter(toFind => toFind.nom === e.target.id)[0];\n    this.setState({nom: selectedRecipe.nom, ingredients: selectedRecipe.ingredients, instructions: selectedRecipe.instructions})\n    document.getElementById(\"recette-detail\").style.display = \"block\";\n  }\n\n  close(){\n    document.getElementById(\"recette-detail\").style.display = \"none\";\n  }\n\n  delete(){\n    let selectedRecipe = recettesList.filter(toFind => toFind.nom === this.state.nom);\n    console.log(selectedRecipe)\n    let indexToDelete = recettesList.indexOf(selectedRecipe);\n    recettesList.splice(indexToDelete, 1);\n    console.log(recettesList)\n\n    this.setState({\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    })\n\n    this.close();\n  }\n\n  render(){\n\n    return (\n      <div>\n        <h2>Toutes les recettes</h2>\n        <div id=\"liste-recettes\">\n          {recettesList.map(item => (<p onClick={this.getRecipe} id={item.nom}>{item.nom}</p>))}\n        </div>\n        <div id=\"recette-detail\">\n          <div id=\"boutons-recette\">\n            <button title=\"Editer\">✎</button>\n            <button title=\"Supprimer\" onClick={this.delete}>🗑</button>\n            <button title=\"Fermer\" onClick={this.close}>X</button>\n          </div>\n          <h3>{this.state.nom}</h3>\n          <ul>\n            {Object.keys(this.state.ingredients).map(key => {\n              if(this.state.ingredients[key]){\n                return <li>{this.state.ingredients[key]}</li>\n              } else {\n                return null;\n              }\n            })}\n          </ul>\n          <p>{this.state.instructions}</p>\n        </div>\n      </div>\n    )\n  }\n};\n\nclass Ajouter extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {0 : '', 1: '', 2: '', 3: '', 4: '', 5:''},\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e){\n    e.preventDefault();\n    return this.setState({ingredientsCounter: [...this.state.ingredientsCounter, this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1],\n                          ingredients: {...this.state.ingredients, [this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1]: ''}})\n  };\n\n  handleName(e){\n    return this.setState({name: e.target.value})\n  };\n\n  handleIngredients(e){\n    let newIngredients = this.state.ingredients\n    newIngredients[e.target.name] = e.target.value\n    return this.setState({ingredients: newIngredients})\n  };\n\n  handleInstructions(e){\n    return this.setState({instructions: e.target.value})\n  }\n\n  handleSubmit(e){\n    if(this.state.name && this.state.ingredients[0] && this.state.instructions){\n      e.preventDefault();\n\n      let item = new recette(this.state.name, this.state.ingredients, this.state.instructions);\n\n      recettesList.push(item);\n\n      document.getElementById(\"recipe-form\").reset();\n\n      this.setState({ingredientsCounter: [0, 1, 2, 3, 4, 5],\n        nom: '',\n        ingredients: {0 : '', 1: '', 2: '', 3: '', 4: '', 5:''},\n        instructions: ''})\n    }\n  };\n\n  render(){\n\n    return (\n      <div>\n        <h2>Ajouter une nouvelle recette :</h2>\n\n        <form id=\"recipe-form\">\n          <label htmlFor=\"name\">Nom</label><input type=\"text\" id=\"name\" defaultValue={this.state.nom} onChange={this.handleName} required></input>\n          <br />\n          <fieldset>\n            <legend>Ingrédients</legend>\n            <div id=\"inputs\">\n              {Array.from(this.state.ingredientsCounter).map(item => {\n                if(item === 0){\n                  return <input type=\"text\" className=\"ingredient\" onChange={this.handleIngredients} name={item} defaultValue={this.state.ingredients[item]} required></input>\n                } else {\n                  return <input type=\"text\" className=\"ingredient\" onChange={this.handleIngredients} name={item} defaultValue={this.state.ingredients[item]}></input>\n                }\n              })}\n            </div>\n            <button onClick={this.newIngredient}>+</button>\n          </fieldset>\n          <label htmlFor=\"instructions\">Instructions</label><textarea id=\"instructions\" defaultValue={this.state.instructions} onChange={this.handleInstructions} required></textarea>\n          <br />\n          <button type=\"submit\" onClick={this.handleSubmit}>Envoyer</button>\n        </form>\n      </div>\n    )\n  }\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      content: <Recettes />\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n    add(){\n      return this.setState({content: <Ajouter />})\n    }\n\n    recette(){\n      return this.setState({content: <Recettes />})\n    }\n  render(){\n\n    return (\n      <div>\n        <h1>Mes recettes</h1>\n        <button onClick={this.add}>Ajouter</button>\n        <button onClick={this.recette}>Recettes</button>\n        <div id=\"main\">{this.state.content}</div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/"]},"metadata":{},"sourceType":"module"}