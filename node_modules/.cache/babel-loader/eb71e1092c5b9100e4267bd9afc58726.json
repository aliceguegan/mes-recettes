{"ast":null,"code":"var _jsxFileName = \"/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction recette(n, i1, i2) {\n  this.nom = n;\n  this.ingredients = i1;\n  this.instructions = i2;\n}\n\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    };\n    this.getRecipe = this.getRecipe.bind(this);\n  }\n\n  getRecipe(e) {\n    console.log(recettesList);\n    let selectedRecipe = recettesList.filter(toFind => [toFind].nom === e.target.value)[0];\n    return this.setState({\n      nom: selectedRecipe.nom,\n      ingredients: selectedRecipe.ingredients,\n      instructions: selectedRecipe.instructions\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Toutes les recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"liste-recettes\",\n        children: recettesList.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: this.getRecipe,\n          children: item.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recette-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.ingredients).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: this.state.ingredients[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass Ajouter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {\n        0: '',\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: ''\n      },\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e) {\n    e.preventDefault();\n    return this.setState({\n      ingredientsCounter: [...this.state.ingredientsCounter, this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1],\n      ingredients: { ...this.state.ingredients,\n        [this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1]: ''\n      }\n    });\n  }\n\n  handleName(e) {\n    return this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleIngredients(e) {\n    let newIngredients = this.state.ingredients;\n    newIngredients[e.target.name] = e.target.value;\n    return this.setState({\n      ingredients: newIngredients\n    });\n  }\n\n  handleInstructions(e) {\n    return this.setState({\n      instructions: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let item = new recette(this.state.name, this.state.ingredients, this.state.instructions);\n    recettesList.push(item);\n    document.getElementById(\"recipe-form\").reset();\n    this.setState({\n      ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {\n        0: '',\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: ''\n      },\n      instructions: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ajouter une nouvelle recette :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          defaultValue: this.state.nom,\n          onChange: this.handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Ingr\\xE9dients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inputs\",\n            children: Array.from(this.state.ingredientsCounter).map(item => {\n              return /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"ingredient\",\n                onChange: this.handleIngredients,\n                name: item,\n                defaultValue: this.state.ingredients[item]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.newIngredient,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"instructions\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          defaultValue: this.state.instructions,\n          onChange: this.handleInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }, void 0)\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n  add() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Ajouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  recette() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mes recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.recette,\n        children: \"Recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/","map":{"version":3,"sources":["/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js"],"names":["React","recette","n","i1","i2","nom","ingredients","instructions","recettesList","Recettes","Component","constructor","props","state","getRecipe","bind","e","console","log","selectedRecipe","filter","toFind","target","value","setState","render","map","item","Object","keys","key","Ajouter","ingredientsCounter","newIngredient","handleSubmit","handleName","handleIngredients","handleInstructions","preventDefault","length","name","newIngredients","push","document","getElementById","reset","Array","from","App","content","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction recette (n, i1, i2) {\n    this.nom = n;\n    this.ingredients = i1;\n    this.instructions = i2;\n}\n\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nom: '',\n      ingredients: {},\n      instructions: ''\n    };\n    this.getRecipe = this.getRecipe.bind(this);\n  }\n\n  getRecipe(e){\n    console.log(recettesList);\n    let selectedRecipe = recettesList.filter(toFind => [toFind].nom === e.target.value)[0];\n    return this.setState({nom: selectedRecipe.nom, ingredients: selectedRecipe.ingredients, instructions: selectedRecipe.instructions})\n  }\n\n  render(){\n\n    return (\n      <div>\n        <h2>Toutes les recettes</h2>\n        <div id=\"liste-recettes\">\n          {recettesList.map(item => (<p onClick={this.getRecipe}>{item.nom}</p>))}\n        </div>\n        <div id=\"recette-detail\">\n          <h3>{this.state.nom}</h3>\n          <ul>\n            {Object.keys(this.state.ingredients).map(key => {\n              return <li>{this.state.ingredients[key]}</li>\n            })}\n          </ul>\n          <p>{this.state.instructions}</p>\n        </div>\n      </div>\n    )\n  }\n};\n\nclass Ajouter extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {0 : '', 1: '', 2: '', 3: '', 4: '', 5:''},\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e){\n    e.preventDefault();\n    return this.setState({ingredientsCounter: [...this.state.ingredientsCounter, this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1],\n                          ingredients: {...this.state.ingredients, [this.state.ingredientsCounter[this.state.ingredientsCounter.length - 1] + 1]: ''}})\n  };\n\n  handleName(e){\n    return this.setState({name: e.target.value})\n  };\n\n  handleIngredients(e){\n    let newIngredients = this.state.ingredients\n    newIngredients[e.target.name] = e.target.value\n    return this.setState({ingredients: newIngredients})\n  };\n\n  handleInstructions(e){\n    return this.setState({instructions: e.target.value})\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    let item = new recette(this.state.name, this.state.ingredients, this.state.instructions);\n\n    recettesList.push(item);\n\n    document.getElementById(\"recipe-form\").reset();\n\n    this.setState({ingredientsCounter: [0, 1, 2, 3, 4, 5],\n      nom: '',\n      ingredients: {0 : '', 1: '', 2: '', 3: '', 4: '', 5:''},\n      instructions: ''})\n  };\n\n  render(){\n\n    return (\n      <div>\n        <h2>Ajouter une nouvelle recette :</h2>\n\n        <form id=\"recipe-form\">\n          <label htmlFor=\"name\">Nom</label><input type=\"text\" id=\"name\" defaultValue={this.state.nom} onChange={this.handleName}></input>\n          <br />\n          <fieldset>\n            <legend>Ingrédients</legend>\n            <div id=\"inputs\">\n              {Array.from(this.state.ingredientsCounter).map(item => {\n                return <input type=\"text\" className=\"ingredient\" onChange={this.handleIngredients} name={item} defaultValue={this.state.ingredients[item]}></input>\n              })}\n            </div>\n            <button onClick={this.newIngredient}>+</button>\n          </fieldset>\n          <label htmlFor=\"instructions\">Instructions</label><textarea id=\"instructions\" defaultValue={this.state.instructions} onChange={this.handleInstructions}></textarea>\n          <br />\n          <button type=\"submit\" onClick={this.handleSubmit}>Envoyer</button>\n        </form>\n      </div>\n    )\n  }\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      content: <Recettes />\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n    add(){\n      return this.setState({content: <Ajouter />})\n    }\n\n    recette(){\n      return this.setState({content: <Recettes />})\n    }\n  render(){\n\n    return (\n      <div>\n        <h1>Mes recettes</h1>\n        <button onClick={this.add}>Ajouter</button>\n        <button onClick={this.recette}>Recettes</button>\n        <div id=\"main\">{this.state.content}</div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/"]},"metadata":{},"sourceType":"module"}