{"ast":null,"code":"var _jsxFileName = \"/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst recette = {\n  nom: '',\n  ingredients: [],\n  instructions: ''\n};\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"RECETTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this) //liste des recettes\n    ;\n  }\n\n}\n\n;\n\nclass Ajouter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientsCounter: 6,\n      recettes: 0,\n      nom: '',\n      ingredients: [],\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e) {\n    e.preventDefault();\n    return this.setState({\n      ingredients: this.state.ingredients + 1\n    });\n  }\n\n  handleName(e) {\n    return this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleIngredients(e) {\n    return this.setState({\n      ingredients: this.state.ingredients.push(e.target.value)\n    });\n  }\n\n  handleInstructions(e) {\n    return this.setState({\n      instructions: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    let nouvelle = new recette();\n    recette.nom = this.state.name;\n    recette.ingredients = this.state.ingredients;\n    recette.instructions = this.state.instructions;\n    recettesList.push(nouvelle);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ajouter une nouvelle recette :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: this.handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Ingr\\xE9dients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inputs\",\n            children: Array.from(Array(this.state.ingredientsCounter)).map(item => {\n              return /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"ingredient\",\n                onChange: this.handleIngredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.newIngredient,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"instructions\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          onChange: this.handleInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }, void 0)\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n  add() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Ajouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  recette() {\n    return this.setState({\n      content: /*#__PURE__*/_jsxDEV(Recettes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }, this)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mes recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.recette,\n        children: \"Recettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/","map":{"version":3,"sources":["/Users/aliceguegan/Documents/CODAGE/recette-app/src/App.js"],"names":["React","recette","nom","ingredients","instructions","recettesList","Recettes","Component","constructor","props","state","render","Ajouter","ingredientsCounter","recettes","newIngredient","bind","handleSubmit","handleName","handleIngredients","handleInstructions","e","preventDefault","setState","name","target","value","push","nouvelle","Array","from","map","item","App","content","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst recette = {\n  nom: '',\n  ingredients: [],\n  instructions: ''\n}\n\nlet recettesList = [];\n\nclass Recettes extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render(){\n\n    return (\n      <div>RECETTES</div>\n      //liste des recettes\n    )\n  }\n};\n\nclass Ajouter extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredientsCounter: 6,\n      recettes: 0,\n      nom: '',\n      ingredients: [],\n      instructions: ''\n    };\n    this.newIngredient = this.newIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.handleInstructions = this.handleInstructions.bind(this);\n  }\n\n  newIngredient(e){\n    e.preventDefault();\n    return this.setState({ingredients: this.state.ingredients + 1})\n  };\n\n  handleName(e){\n    return this.setState({name: e.target.value})\n  };\n\n  handleIngredients(e){\n    return this.setState({ingredients: this.state.ingredients.push(e.target.value)})\n  };\n\n  handleInstructions(e){\n    return this.setState({instructions: e.target.value})\n  }\n\n  handleSubmit(){\n    let nouvelle = new recette();\n    recette.nom = this.state.name;\n    recette.ingredients = this.state.ingredients;\n    recette.instructions = this.state.instructions;\n\n    recettesList.push(nouvelle);\n  };\n\n  render(){\n\n    return (\n      <div>\n        <h2>Ajouter une nouvelle recette :</h2>\n\n        <form>\n          <label htmlFor=\"name\">Nom</label><input type=\"text\" id=\"name\" onChange={this.handleName}></input>\n          <br />\n          <fieldset>\n            <legend>Ingrédients</legend>\n            <div id=\"inputs\">\n              {Array.from(Array(this.state.ingredientsCounter)).map(item => {\n                return <input type=\"text\" class=\"ingredient\" onChange={this.handleIngredients}></input>\n              })}\n            </div>\n            <button onClick={this.newIngredient}>+</button>\n          </fieldset>\n          <label htmlFor=\"instructions\">Instructions</label><textarea id=\"instructions\" onChange={this.handleInstructions}></textarea>\n\n          <button type=\"submit\" onClick={this.handleSubmit}>Envoyer</button>\n        </form>\n      </div>\n    )\n  }\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      content: <Recettes />\n    };\n    this.add = this.add.bind(this);\n    this.recette = this.recette.bind(this);\n  }\n\n    add(){\n      return this.setState({content: <Ajouter />})\n    }\n\n    recette(){\n      return this.setState({content: <Recettes />})\n    }\n  render(){\n\n    return (\n      <div>\n        <h1>Mes recettes</h1>\n        <button onClick={this.add}>Ajouter</button>\n        <button onClick={this.recette}>Recettes</button>\n        <div id=\"main\">{this.state.content}</div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n/*User Story: I can create recipes that have names and ingredients.\n\nUser Story: I can see an index view where the names of all the recipes are visible.\n\nUser Story: I can click into any of those recipes to view it.\n\nUser Story: I can edit these recipes.\n\nUser Story: I can delete these recipes.\n\nUser Story: All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there.*/"]},"metadata":{},"sourceType":"module"}